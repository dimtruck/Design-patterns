package com.designpatterns.factories;

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

import com.designpatterns.entities.Pattern;
import com.designpatterns.entities.PatternExample;
import com.designpatterns.enums.Language;

public class JsonFactory {
	public static List<Pattern> getPatterns(String filePath){
		List<Pattern> patternList = new ArrayList<Pattern>();
		JSONParser parser = new JSONParser();
		JSONArray patternArray;
		try {
			patternArray = (JSONArray) parser.parse(new FileReader(filePath));
			for(Object p : patternArray){
				JSONObject jsonPattern = (JSONObject)p;
				
				//get examples and convert
				List<PatternExample> list = new ArrayList<PatternExample>();
				JSONArray exampleArray = (JSONArray)jsonPattern.get("examples");
				for(Object e : exampleArray){
					list.add(PatternExample.createPatternExample(
							(String)jsonPattern.get("name"), 
							(String)jsonPattern.get("code")));
				}
				
				patternList.add(Pattern.createPattern(
						(String)jsonPattern.get("name"), 
						(String)jsonPattern.get("description"), 
						Language.JAVA, 
						(String)jsonPattern.get("image"), 
						list));
						
			}
		} catch (FileNotFoundException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		} catch (ParseException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		
		return patternList;
	}

}
